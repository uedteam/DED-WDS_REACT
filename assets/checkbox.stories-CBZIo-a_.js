import{j as n}from"./jsx-runtime-DEdD30eg.js";import{a as C}from"./chunk-454WOBUV-ChHd1ABr.js";import{r as d}from"./index-RYns6xqu.js";import"./auo-0es9FKg1.js";import{S as k}from"./check-BnJBHFpS.js";const m=(a,o)=>`checkbox-${a}-${o} `,i=a=>{const{themeColor:o="primary",className:g,options:y=[],direction:f="row",initValue:u=[],onChange:l,...x}=a,[r,s]=d.useState([]);return d.useEffect(()=>{s(u||[])},[u]),n.jsx("div",{className:`checkbox-container ${f==="row"?"checkbox-container-row":"checkbox-container-column"}`,children:y.map(e=>n.jsxs("label",{htmlFor:e.value,className:`checkbox ${g}`,children:[n.jsx("input",{...x,className:"checkbox-input",id:e.value,value:e.value,onChange:b=>b.target.checked?(s([...r,e.value]),l&&l([...r,e.value])):(s(r.filter(c=>c!==e.value)),l&&l(r.filter(c=>c!==e.value))),name:"option",type:"checkbox"}),r.includes(e.value)?n.jsx("div",{className:`checkbox-icon ${m("checked",o)}`,children:n.jsx(k,{})}):n.jsx("div",{className:`checkbox-icon ${m("unchecked",o)}`}),n.jsx("span",{className:"checkbox-text",children:e.label})]},e.value))})};try{i.displayName="Checkbox",i.__docgenInfo={description:"Checkbox 組件。",displayName:"Checkbox",props:{themeColor:{defaultValue:null,description:"",name:"themeColor",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'},{value:'"success"'},{value:'"warning"'},{value:'"error"'},{value:'"info"'}]}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},options:{defaultValue:null,description:"",name:"options",required:!1,type:{name:"{ label: string; value: string; }[]"}},initValue:{defaultValue:null,description:"",name:"initValue",required:!1,type:{name:"string[]"}},direction:{defaultValue:null,description:"",name:"direction",required:!1,type:{name:"enum",value:[{value:'"row"'},{value:'"column"'}]}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((value: string[]) => void)"}}}}}catch{}try{checkbox.displayName="checkbox",checkbox.__docgenInfo={description:"Checkbox 組件。",displayName:"checkbox",props:{themeColor:{defaultValue:null,description:"",name:"themeColor",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'},{value:'"success"'},{value:'"warning"'},{value:'"error"'},{value:'"info"'}]}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},options:{defaultValue:null,description:"",name:"options",required:!1,type:{name:"{ label: string; value: string; }[]"}},initValue:{defaultValue:null,description:"",name:"initValue",required:!1,type:{name:"string[]"}},direction:{defaultValue:null,description:"",name:"direction",required:!1,type:{name:"enum",value:[{value:'"row"'},{value:'"column"'}]}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((value: string[]) => void)"}}}}}catch{}const j={title:"Design System/Checkbox",component:i,tags:["autodocs"],argTypes:{themeColor:{description:"主題顏色",options:["primary","secondary","tertiary","success","warning","error","info"],control:{type:"select",options:["primary","secondary","tertiary","success","warning","error","info"]}},className:{description:"客製化樣式"},options:{description:"選項"},direction:{description:"方向",control:{type:"select",options:["row","column"]}},initValue:{description:"選中的選項"},onChange:{description:"選中選項改變時的回調函數",action:"onChange"}},args:{direction:"row",themeColor:"primary",value:""},parameters:{docs:{title:"Checkbox",description:{component:"Checkbox 組件的呈現及說明。"}}}},t={name:"主要項目",args:{className:"",options:[{label:"選項一",value:"option1"},{label:"選項二",value:"option2"},{label:"選項三",value:"option3"}],initValue:["option2"],onChange:a=>C("onChange")(a)},render(a){return n.jsx(i,{...a})}};var p,h,v;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  name: '主要項目',
  args: {
    className: '',
    options: [{
      label: '選項一',
      value: 'option1'
    }, {
      label: '選項二',
      value: 'option2'
    }, {
      label: '選項三',
      value: 'option3'
    }],
    initValue: ['option2'],
    onChange: e => action('onChange')(e)
  },
  render(args) {
    return <Checkbox {...args} />;
  }
}`,...(v=(h=t.parameters)==null?void 0:h.docs)==null?void 0:v.source}}};const E=["Primary"];export{t as Primary,E as __namedExportsOrder,j as default};
